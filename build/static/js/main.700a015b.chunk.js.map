{"version":3,"sources":["components/CreateBook.js","components/BookCard.js","components/ShowBookList.js","components/ShowBookDetails.js","components/UpdateBookInfo.js","App.js","serviceWorker.js","index.js"],"names":["CreateBook","onChange","e","setState","target","name","value","onSubmit","preventDefault","data","title","state","isbn","img_url","author","description","published_date","publisher","axios","post","process","then","res","props","history","push","catch","err","console","log","className","to","noValidate","this","type","placeholder","Component","BookCard","book","src","alt","width","height","_id","ShowBookList","books","get","bookList","map","k","key","showBookDetails","match","params","id","delete","BookItem","scope","onClick","onDeleteClick","bind","UpdateBookInfo","put","htmlFor","App","exact","path","component","ShowBookDetails","Boolean","window","location","hostname","require","config","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.700a015b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\nimport axios from 'axios';\n\n\nclass CreateBook extends Component {\n  constructor() {\n    super();\n    this.state = {\n      title: '',\n      isbn:'',\n      img_url: '',\n      author:'',\n      description:'',\n      published_date:'',\n      publisher:''\n    };\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const data = {\n      title: this.state.title,\n      isbn: this.state.isbn,\n      img_url: this.state.img_url,\n      author: this.state.author,\n      description: this.state.description,\n      published_date: this.state.published_date,\n      publisher: this.state.publisher\n    };\n\n    axios\n      .post(process.env.REACT_APP_API_BASE_URL + '/api/books', data)\n      .then(res => {\n        this.setState({\n          title: '',\n          isbn:'',\n          img_url: '',\n          author:'',\n          description:'',\n          published_date:'',\n          publisher:''\n        })\n        this.props.history.push('/');\n      })\n      .catch(err => {\n        console.log(\"Error in CreateBook!\");\n      })\n  };\n\n  render() {\n    return (\n      <div className=\"CreateBook\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <br />\n              <Link to=\"/\" className=\"btn btn-outline-warning float-left\">\n                  Show BooK List\n              </Link>\n            </div>\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Add Book</h1>\n              <p className=\"lead text-center\">\n                  Create new book\n              </p>\n\n              <form noValidate onSubmit={this.onSubmit}>\n                <div className='form-group'>\n                  <input\n                    type='text'\n                    placeholder='Title of the Book'\n                    name='title'\n                    className='form-control'\n                    value={this.state.title}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <br />\n\n                <div className='form-group'>\n                  <input\n                    type='text'\n                    placeholder='ISBN'\n                    name='isbn'\n                    className='form-control'\n                    value={this.state.isbn}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <div className='form-group'>\n                  <input\n                    type='text'\n                    placeholder='URL Image'\n                    name='img_url'\n                    className='form-control'\n                    value={this.state.img_url}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <div className='form-group'>\n                  <input\n                    type='text'\n                    placeholder='Author'\n                    name='author'\n                    className='form-control'\n                    value={this.state.author}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <div className='form-group'>\n                  <input\n                    type='text'\n                    placeholder='Describe this book'\n                    name='description'\n                    className='form-control'\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <div className='form-group'>\n                  <input\n                    type='date'\n                    placeholder='published_date'\n                    name='published_date'\n                    className='form-control'\n                    value={this.state.published_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className='form-group'>\n                  <input\n                    type='text'\n                    placeholder='Publisher of this Book'\n                    name='publisher'\n                    className='form-control'\n                    value={this.state.publisher}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                    type=\"submit\"\n                    className=\"btn btn-outline-warning btn-block mt-4\"\n                />\n              </form>\n          </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CreateBook;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\n\nconst BookCard = (props) => {\n    const  book  = props.book;\n\n    return(\n        <div className=\"card-container\">\n            <img src={book.img_url} alt={book.title} width='250px' height='350px' />\n            <div className=\"desc\">\n                <h2>\n                    <Link to={`/show-book/${book._id}`}>\n                        { book.title }\n                    </Link>\n                </h2>\n                <h3>{book.author}</h3>\n                <p>{book.description}</p>\n            </div>\n        </div>\n    )\n};\n\nexport default BookCard;","import React, { Component } from 'react';\nimport '../App.css';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport BookCard from './BookCard';\n\nclass ShowBookList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: []\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(process.env.REACT_APP_API_BASE_URL + '/api/books')\n      .then(res => {\n        this.setState({\n          books: res.data\n        })\n      })\n      .catch(err =>{\n        console.log('Error from ShowBookList');\n      })\n  };\n\n\n  render() {\n    const books = this.state.books;\n    console.log(\"PrintBook: \" + books);\n    let bookList;\n\n    if(!books) {\n      bookList = \"there is no book record!\";\n    } else {\n      bookList = books.map((book, k) =>\n        <BookCard book={book} key={k} />\n      );\n    }\n\n    return (\n      <div className=\"ShowBookList\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <br />\n              <h2 className=\"display-4 text-center\">Books List</h2>\n            </div>\n\n            <div className=\"col-md-11\">\n              <Link to=\"/create-book\" className=\"btn btn-outline-warning float-right\">\n                + Add New Book\n              </Link>\n              <br />\n              <br />\n              <hr />\n            </div>\n\n          </div>\n\n          <div className=\"list\">\n                {bookList}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ShowBookList;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\nimport axios from 'axios';\n\nclass showBookDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      book: {}\n    };\n  }\n\n  componentDidMount() {\n    // console.log(\"Print id: \" + this.props.match.params.id);\n    axios\n      .get(process.env.REACT_APP_API_BASE_URL + '/api/books/' + this.props.match.params.id)\n      .then(res => {\n        // console.log(\"Print-showBookDetails-API-response: \" + res.data);\n        this.setState({\n          book: res.data\n        })\n      })\n      .catch(err => {\n        console.log(\"Error from ShowBookDetails\");\n      })\n  };\n\n  onDeleteClick (id) {\n    axios\n      .delete(process.env.REACT_APP_API_BASE_URL + '/api/books/' + id)\n      .then(res => {\n        this.props.history.push(\"/\");\n      })\n      .catch(err => {\n        console.log(\"Error form ShowBookDetails_deleteClick\");\n      })\n  };\n\n\n  render() {\n\n    const book = this.state.book;\n    let BookItem = <div>\n      <table className=\"table table-hover table-dark\">\n        {/* <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">First</th>\n            <th scope=\"col\">Last</th>\n            <th scope=\"col\">Handle</th>\n          </tr>\n        </thead> */}\n        <tbody>\n          <tr>\n            <th scope=\"row\">1</th>\n            <td>Title</td>\n            <td>{ book.title }</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">2</th>\n            <td>Author</td>\n            <td>{ book.author }</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">3</th>\n            <td>ISBN</td>\n            <td>{ book.isbn }</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">4</th>\n            <td>Publisher</td>\n            <td>{ book.publisher }</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">5</th>\n            <td>Published Date</td>\n            <td>{ book.published_date }</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">6</th>\n            <td>Description</td>\n            <td>{ book.description }</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    return (\n      <div className=\"ShowBookDetails\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-10 m-auto\">\n              <br /> <br />\n              <Link to=\"/\" className=\"btn btn-outline-warning float-left\">\n                  Show Book List\n              </Link>\n            </div>\n            <br />\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Book's Record</h1>\n              <p className=\"lead text-center\">\n                  View Book's Info\n              </p>\n              <hr /> <br />\n            </div>\n          </div>\n          <div>\n            { BookItem }\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <button type=\"button\" className=\"btn btn-outline-danger btn-lg btn-block\" onClick={this.onDeleteClick.bind(this,book._id)}>Delete Book</button><br />\n            </div>\n\n            <div className=\"col-md-6\">\n              <Link to={`/edit-book/${book._id}`} className=\"btn btn-outline-info btn-lg btn-block\">\n                    Edit Book\n              </Link>\n              <br />\n            </div>\n\n          </div>\n            {/* <br />\n            <button type=\"button\" class=\"btn btn-outline-info btn-lg btn-block\">Edit Book</button>\n            <button type=\"button\" class=\"btn btn-outline-danger btn-lg btn-block\">Delete Book</button> */}\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default showBookDetails;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport '../App.css';\n\nclass UpdateBookInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      isbn: '',\n      img_url: '',\n      author: '',\n      description: '',\n      published_date: '',\n      publisher: ''\n    };\n  }\n\n  componentDidMount() {\n    // console.log(\"Print id: \" + this.props.match.params.id);\n    axios\n      .get(process.env.REACT_APP_API_BASE_URL + '/api/books/' + this.props.match.params.id)\n      .then(res => {\n        // this.setState({...this.state, book: res.data})\n        this.setState({\n          title: res.data.title,\n          isbn: res.data.isbn,\n          img_url: res.data.img_url,\n          author: res.data.author,\n          description: res.data.description,\n          published_date: res.data.published_date,\n          publisher: res.data.publisher\n        })\n      })\n      .catch(err => {\n        console.log(\"Error from UpdateBookInfo\");\n      })\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const data = {\n      title: this.state.title,\n      isbn: this.state.isbn,\n      img_url: this.state.img_url,\n      author: this.state.author,\n      description: this.state.description,\n      published_date: this.state.published_date,\n      publisher: this.state.publisher\n    };\n\n    axios\n      .put(process.env.REACT_APP_API_BASE_URL + '/api/books/' + this.props.match.params.id, data)\n      .then(res => {\n        this.props.history.push('/show-book/' + this.props.match.params.id);\n      })\n      .catch(err => {\n        console.log(\"Error in UpdateBookInfo!\");\n      })\n  };\n\n\n  render() {\n    return (\n      <div className=\"UpdateBookInfo\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <br />\n              <Link to=\"/\" className=\"btn btn-outline-warning float-left\">\n                  Show BooK List\n              </Link>\n            </div>\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Edit Book</h1>\n              <p className=\"lead text-center\">\n                  Update Book's Info\n              </p>\n            </div>\n          </div>\n\n          <div className=\"col-md-8 m-auto\">\n          <form noValidate onSubmit={this.onSubmit}>\n            <div className='form-group'>\n              <label htmlFor=\"title\">Title</label>\n              <input\n                type='text'\n                placeholder='Title of the Book'\n                name='title'\n                className='form-control'\n                value={this.state.title}\n                onChange={this.onChange}\n              />\n            </div>\n            <br />\n\n            <div className='form-group'>\n            <label htmlFor=\"isbn\">ISBN</label>\n              <input\n                type='text'\n                placeholder='ISBN'\n                name='isbn'\n                className='form-control'\n                value={this.state.isbn}\n                onChange={this.onChange}\n              />\n            </div>\n\n            <div className='form-group'>\n            <label htmlFor=\"img_url\">URL Image</label>\n              <input\n                type='text'\n                placeholder='Image URL'\n                name='img_url'\n                className='form-control'\n                value={this.state.img_url}\n                onChange={this.onChange}\n              />\n            </div>\n\n            <div className='form-group'>\n            <label htmlFor=\"author\">Author</label>\n              <input\n                type='text'\n                placeholder='Author'\n                name='author'\n                className='form-control'\n                value={this.state.author}\n                onChange={this.onChange}\n              />\n            </div>\n\n            <div className='form-group'>\n            <label htmlFor=\"description\">Description</label>\n              <input\n                type='text'\n                placeholder='Describe this book'\n                name='description'\n                className='form-control'\n                value={this.state.description}\n                onChange={this.onChange}\n              />\n            </div>\n\n            <div className='form-group'>\n            <label htmlFor=\"published_date\">Published Date</label>\n              <input\n                type='date'\n                placeholder='published_date'\n                name='published_date'\n                className='form-control'\n                value={this.state.published_date}\n                onChange={this.onChange}\n              />\n            </div>\n            <div className='form-group'>\n            <label htmlFor=\"publisher\">Publisher</label>\n              <input\n                type='text'\n                placeholder='Publisher of this Book'\n                name='publisher'\n                className='form-control'\n                value={this.state.publisher}\n                onChange={this.onChange}\n              />\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-outline-info btn-lg btn-block\">Update Book</button>\n            </form>\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UpdateBookInfo;","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route } from 'react-router-dom'; \nimport './App.css'; \n\n// Importing components\nimport CreateBook from './components/CreateBook'; \nimport ShowBookList from './components/ShowBookList'; \nimport ShowBookDetails from './components/ShowBookDetails'; \nimport UpdateBookInfo from './components/UpdateBookInfo'; \n\n\nclass App extends Component {\n  render() {\n    return(\n      <Router>\n        <div>\n          <Route exact path='/' component={ShowBookList} />\n          <Route path='/create-book' component={CreateBook} />\n          <Route path='/edit-book/:id' component={UpdateBookInfo} />\n          <Route path='/show-book/:id' component={ShowBookDetails} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrequire('dotenv').config(); \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}